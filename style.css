* {margin: 0; padding: 0;}

html, body {
  height: 100%;
}

body {
  background-color: #999;
  box-shadow: inset 20px 20px 20px #222;
}

.frame {
  --frame-thickness: 50px;
  --grid-height: 490px; /* remove defining this constant both here and in JS */
  --grid-width: calc(5 / 3 * var(--grid-height));
  --frame-width: calc(var(--grid-width) + 2 * var(--frame-thickness));
  --frame-height: calc(var(--grid-height) + 2 * var(--frame-thickness));
  position: absolute;
  width: var(--frame-width);
  height: var(--frame-height);
  background-color: var(--frame-color);
  border-radius: 20px;
  box-shadow: 10px 10px 10px 5px #222, 
    inset 0 0 5px #222,
    inset 0 0 20px #ffffff7f,
    inset 2px 2px 10px var(--frame-color), 
    inset 5px 5px 5px white;
}

.grid {
  position: absolute;
  overflow: hidden;
  border-radius: 20px;
  top: var(--frame-thickness);
  left: var(--frame-thickness);
  box-shadow: 2px 2px 10px var(--frame-color),
    3px 3px 5px white,
    0 0 20px #ffffff7f;
}

.grid::before {
  content: "";

  box-shadow: inset 2px 2px 2px #222;
  z-index: 1;
  width: inherit;
  height: inherit;
  border-radius: 20px;

  position: absolute;
  top: 0;
  left: 0;

  pointer-events: none;
}

:root {
  --default-hexagon-margin-side-length: 50px;
  --default-cell-background-color: black;
  --default-hexagon-margin: 1px;
  --default-square-width: 50px;
  --default-square-height: 50px;
  --default-square-border: 1px;
  --frame-color: #3256bb;
  --frame-color-dark: #253f86;
}

.cell {
  transition: border 0.1s, background-color 0.1s;
}

.square {
  --cell-background-color: var(--default-cell-background-color);
  background-color: var(--cell-background-color);
  width: calc(var(--default-square-width) - 2*var(--default-square-border));
  height: calc(var(--default-square-height) - 2*var(--default-square-border));
  border: var(--default-square-border) solid transparent;
  background-clip: padding-box;
  position: absolute;
}

.hexagon {  /* the central rectangle */
  --hexagon-margin-side-length: var(--default-hexagon-margin-side-length);
  --cell-background-color: var(--default-cell-background-color);
  --hexagon-margin: var(--default-hexagon-margin); /* border won't behave correctly on :before and :after elements, so instead, shrink the hexagon slightly */
  --hexagon-height: calc(var(--root-3) * var(--hexagon-margin-side-length) - 2*var(--hexagon-margin));
  --hexagon-width: calc(2/var(--root-3) * var(--hexagon-height));
  --hexagon-side-length: calc(var(--hexagon-width) / 2);
  --root-3: 1.73205080757;
  width: var(--hexagon-side-length); /* this is just the width of the central rectangle */
  height: var(--hexagon-height);
  background-color: var(--cell-background-color);
  position:absolute;
}

.hexagon:before { /* the left triangle */
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  left: calc(-1 * var(--hexagon-side-length) / 2);
  border-right: calc(var(--hexagon-side-length) / 2) solid var(--cell-background-color);
  border-bottom: calc(var(--hexagon-height) / 2) solid transparent;
  border-top: calc(var(--hexagon-height) / 2) solid transparent;
  transition: inherit;
}

.hexagon:after { /* the right triangle */
  content: "";
  position: absolute;
  width: 0;
  height: 0;
  right: calc(-1 * var(--hexagon-side-length) / 2);
  border-left: calc(var(--hexagon-side-length) / 2) solid var(--cell-background-color);
  border-bottom: calc(var(--hexagon-height) / 2) solid transparent;
  border-top: calc(var(--hexagon-height) / 2) solid transparent;
  transition: inherit;
}

.clear-slider-frame {
  position: absolute;
  --top-horiz-border-radius: 10px;
  --slider-frame-width: calc(2*var(--slider-overflow) + var(--grid-width));
  --slider-width: calc(4*var(--top-horiz-border-radius));
  --slider-overflow: 20px;
  --slider-height: 30px;
  height: var(--slider-height);
  bottom: 0;
  left: calc(var(--frame-thickness) - var(--slider-overflow));
  width: var(--slider-frame-width);
  background-color: var(--frame-color);
  border-top-left-radius: var(--top-horiz-border-radius) var(--slider-height);
  border-top-right-radius: var(--top-horiz-border-radius) var(--slider-height);
  box-shadow: inset 6px 6px 6px 3px #222,
    inset 0 0 10px 0 #ffffff3f,
    2px -2.5px 5px -2.5px var(--frame-color),
    5px -2.5px 5px -2.5px #ffffff7f,
    0 -2.5px 10px -2.5px #ffffff3f;
}

.clear-slider-frame:before {
  content: "";

  box-shadow: inset 3px 3px 5px 0 #222;
  z-index: 2;
  width: inherit;
  height: inherit;
  border-radius: inherit;

  position: absolute;
  top: 0;
  left: 0;

  pointer-events: none;
}

.clear-slider-frame:after {
  --height: 15px;
  content: "";
  position: absolute;
  height: var(--height);
  width: calc(var(--slider-frame-width) - 3px);
  bottom: calc(-1*var(--height) - 1px);
  left: 8px;
  background-color: #999;
  transform: skewX(20deg);
  box-shadow: inset 0 10px 5px -5px #222,
    inset 5px 0 5px -5px #222,
    inset -5px 0 5px -5px #222,
    -8px 0 5px -5px #222,
    0 5px 5px #999;
}

.clear-slider-track {
  position: absolute;
  width: calc(var(--slider-frame-width) - var(--slider-width));
  left: calc(var(--slider-width) / 2);
  --track-height: 6px;
  height: var(--track-height);
  bottom: calc(var(--slider-height)/2 - var(--track-height)/2);
  background-color: #0f1935;
  box-shadow: 2px 2px 5px 0 #ffffff3f;
}

.clear-slider-handle {
  position: absolute;
  left: 0;
  height: calc(var(--slider-height) + 1px);
  width: var(--slider-width);
  background-color: #940011;
  border-top-left-radius: inherit;
  border-top-right-radius: inherit;
  border-bottom-left-radius: calc(var(--top-horiz-border-radius)*2) 3px;
  border-bottom-right-radius: calc(var(--top-horiz-border-radius)*2) 3px;
  z-index: 1;
  box-shadow: 2px 8px 15px #222;
}

.clear-slider-handle:before {
  content: "";
  position: absolute;
  height: inherit;
  width: calc(var(--top-horiz-border-radius)*1.5);
  border-top-left-radius: inherit;
  border-top-right-radius: calc(var(--top-horiz-border-radius)/2) var(--slider-height);
  box-shadow: 5px -0px 5px -1px #ffffff3f,
    inset -2px 2px 5px 2px #0000003f;
}

.clear-slider-handle:after {
  content: "";
  position: absolute;
  right: 0;
  height: inherit;
  width: calc(var(--top-horiz-border-radius)*1.5);
  border-top-left-radius: calc(var(--top-horiz-border-radius)/2) var(--slider-height);
  border-top-right-radius: inherit;
  box-shadow: inset 2px 2px 5px 2px #0000007f;
}

.opacity-slider {
  --opacity-slider-length: 200px;
  --opacity-slider-width: 20px;
  --left-offset: 5px;
  position: absolute;
  height: var(--opacity-slider-length);
  width: var(--opacity-slider-width);
  left: calc(var(--frame-thickness)/2 - var(--opacity-slider-width)/2 + var(--left-offset));
  top: calc(var(--frame-height)/2 - var(--opacity-slider-length)/2);
  background-color: transparent;
  z-index: 1;
}

.opacity-slider-track {
  --track-thickness: 4px;
  --left-offset: -3px;
  position: absolute;
  width: var(--track-thickness);
  height: calc(var(--opacity-slider-length) - var(--opacity-slider-width));
  top: calc(var(--opacity-slider-width)/2);
  left: calc(var(--opacity-slider-width)/2 - var(--track-thickness)/2 + var(--left-offset));
  background-color: #0f1935;
  box-shadow: 2px 2px 5px 0 #ffffff3f;
  z-index: -1
}

.opacity-slider-handle {
  position: absolute;
  top: 0;
  left: 0;
  height: var(--opacity-slider-width);
  width: 70%;
  background-color: #940011;
  border-radius: 20% 50% 50% 20%;
  filter: drop-shadow(1px 3px 2px #222)
}

.opacity-slider-handle::after {
  --side-length: calc(var(--opacity-slider-width)/1.414);
  content: "";
  position: absolute;
  left: calc(var(--opacity-slider-width)/2);
  top: 0;
  width: var(--side-length);
  height: var(--side-length);
  background-color: #940011;
  transform: rotate(45deg);
  transform-origin: 0% 0%;
  border-radius: 40% 0;
  z-index: -1;
}

.opacity-slider-handle::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  height: 50%;
  width: calc(var(--opacity-slider-width));
  background-color: transparent;
  box-shadow: inset 0 0 5px 0 #ffffff3f,
    -2px 7px 5px -3px #0000002f;
  border-top-right-radius: 100%;
  border-top-left-radius: 20%;
}

.buttons {
  position: absolute;
  top: 100px;
  left: 30px;
}

button {
  margin: 5px;
  height: 50px;
  width: 100px;
  box-shadow: 2px 2px 2px #222;
}

.horiz-switch .label {
  position: absolute;
  bottom: calc(-1*var(--height));
  width: inherit;
  height: inherit;
  display: flex;
  justify-content: space-around;
  align-items: center;
  left: 1px;
}

.horiz-switch .label * {
  position: relative;
}

.horiz-switch {
  --width: 50px;
  --handle-width: calc(var(--width)/2);
  --hover-left: 2px;
  --height: 25px;
  height: var(--height);
  width: var(--width);
  background-color: var(--frame-color-dark);
  box-shadow: inset 0 5px #999,
    0 -15px #999,
    inset 0 10px 5px -5px white,
    0 5px 15px #ffffff7f,
    2px 2px 5px var(--frame-color),
    2px 2px 5px white;
}

.horiz-switch .handle {
  position: absolute;
  height: inherit;
  width: var(--handle-width);
  background-color: #3256bb;
  left: 0;
  transition: left 0.1s, transform 0.5s;
  box-shadow: inset 0 5px 5px -5px white,
    inset 0 2px 5px var(--frame-color),
    inset 0 2px 5px white,
    2px 2px 2px #0000007f;
  display: flex;
  justify-content: center;
  align-items: center;
}

.horiz-switch .handle .notch {
  height: calc(var(--height)/2);
  width: 3px;
  margin: 1.5px;
  background-color: var(--frame-color);
  display: inline-block;
  box-shadow: inset 1px 1px 1px #ffffff7f,
    1px 1px 1px #0000007f;
}

.horiz-switch:hover .handle {
  left: var(--hover-left);
}

.horiz-switch.toggled .handle {
  transform: translate(calc(var(--width) - var(--handle-width)),0);
}

.horiz-switch.toggled:hover .handle {
  left: calc(-1 * var(--hover-left));
}

/* :not(.toggled)>.label>.toggled-label {
  filter: drop-shadow( 0 0 1px black);
}

.toggled .default-label {
  filter: drop-shadow( 0 0 1px black);
} */

:not(.toggled)>.label>.default-label {
  filter: drop-shadow( 0 0 2px gold);
}

.toggled>.label>.toggled-label {
  filter: drop-shadow( 0 0 2px gold);
}

.label .hexagon {
  --hexagon-margin-side-length: 8px;
  --hexagon-margin: 0px;
  --cell-background-color: var(--frame-color);
}

.label .square {
  width: 12px;
  height: 12px;
  --cell-background-color: var(--frame-color);
}

.toggle-grid-type-button {
  position: absolute;
  left: calc(var(--frame-width)/2 - var(--width)/2);
}

.toggle-grid-type-button .hexagon {
  --cell-background-color: var(--frame-color-dark);
}

.toggle-grid-type-button .square {
  --cell-background-color: var(--frame-color-dark);
}

.change-color-mode-button {
  position: absolute;
  left: calc(var(--frame-width)/4 - var(--width)/2);
}

.label .black {
  --cell-background-color: #2a2a2a;
}

.label .white {
  --cell-background-color: #d7d7d7;
}

.grid-lines-button {
  position: absolute;
  left: calc(var(--frame-width)*3/4 - var(--width)/2);
}


.grid-lines-button .default-label {
  border: 1px solid black;
}

.grid-lines-button .toggled-label {
  border: 1px dashed black;
}

.colors {
  --height: 300px;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  height: var(--height);
  width: 10px;
  position: absolute;
  right: 0;
  top: calc(var(--frame-thickness) + var(--grid-height)/2 - var(--height)/2);
}

.color-button {
  --tray-color: black;
  height: 30px; 
  width: 10px;
  transition: transform 0.5s, width 0.5s, background-color 0.5s;
  position: relative;
  box-shadow: 10px 5px 0 #222;
}

.color-button::after {
  content: "";
  position: absolute;
  width: inherit;
  height: inherit;
  box-shadow: -2px -2px 2px 0 #ffffff3f;
  transition: inherit;
  top: 0;
  left: 0;
  pointer-events: none;
}

.color-lid {
  height: inherit;
  width: inherit;
  background-color: var(--frame-color);
  box-shadow: inset 2px 1px 2px #ffffff7f,
    1px 1px 1px #0000007f,
    8px 10px 10px #222;
  transition: inherit;
  position: absolute;
  top: 0;
  left: 0;
  pointer-events: none;
}

.color-button:hover .color-lid {
  transform: translate(20px, 0);
}

.color-tray {
  height: 30px;
  width: 0;
  background-color: var(--tray-color);
  transition: inherit;
  box-sizing: border-box;
  border-top: 2px solid var(--frame-color);
  border-left: 2px solid var(--frame-color);
  border-bottom: 2px solid var(--frame-color);
  border-top-left-radius: 5px;
  border-bottom-left-radius: 5px;
  pointer-events: none;
  box-shadow: 12px 10px 10px #222;
}

.color-button:hover .color-tray {
  width: 20px;
}

.color-button.toggled .color-tray {
  width: 30px;
  box-shadow: inset 0 0 5px gold,
    12px 10px 10px #222;
}

.color-button.toggled .color-lid {
  transform: translate(30px, 0);
}